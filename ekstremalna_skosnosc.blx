<?xml version='1.0' encoding='iso-8859-2' ?>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
<title>Hojarskiej ekstremalnie sko¶ny rozk³ad g³osów</title>
<!-- Tags: statystyka,gft-->
</head><body><!-- ##Published : 2018-02-25T04:38:11CEST ##-->

<p>Uczono mnie, ¿e wspó³czynnik sko¶no¶ci aczkolwiek mo¿e
przyj±æ warto¶ci wiêksze od 3, to w praktyce taka sytuacja siê nie zdarza.
Dlatego z rezerw± podszed³em do obliczeñ, z których wynika³o, ¿e dla
pewnego zbioru danych wynosi on 14:
</p>

<pre>
library(moments)
# Wynik 1-ki z listy komitetu Z.Stonogi (D.Hojarska, wybory 2015)
s &lt;- read.csv("hojarska.csv", sep = ';', header=T, na.string="NA");
skewness(s$glosy)
[1] 14.08602

nrow(s)
[1] 657

sum(s$glosy)
[1] 1671
</pre>

<p>Pierwsza hipoteza jest taka, ¿e formu³a liczenia wspó³czynnika mo¿e
byæ egzotyczna. Ustalmy zatem jak toto jest liczone:
</p>

<pre>
?skewness
Description:  
This function computes skewness of given data
</pre>
<p>Wiele to siê nie dowiedzia³em. Po ¶ci±gniêciu ¼ród³a mo¿na ustaliæ,
¿e to wspó³czynnik klasyczny czyli iloraz trzeciego momentu centralnego
przez odchylenie standardowe do trzeciej potêgi. Zatem jak najbardziej
klasyczny a nie egzotyczny.
Sprawd¼my co wyliczy Perl dla pewno¶ci:
</p>
<pre>
#!/usr/bin/perl

print STDERR "** U¿ycie: $0 plik numer-kolumny (pierwszy wiersz jest pomijany)\n";
print STDERR "** Domy¶lnie: wyniki kandydata nr1 na li¶cie komitetu Z.Stonoga (okr.25 / D.Hojarska)\n";

$file = "hojarska.csv"; ## default file
$column = 1; ## first column = 0

if ( $#ARGV >= 0 ) { $file=$ARGV[0]; } 
if ( $#ARGV >= 1 ) { $column=$ARGV[1]; } 

open (S, "$file") || die "Cannot open $file\n";

print "\nDane z pliku $file (kolumna: $column):\n"; 
$hdr = &lt;S> ; # wczytaj i pomin naglowek ($n bêdzie prawid³owe)
while (&lt;S>) { chomp();
  @tmp = split (/;/, $_); 
  $v = $tmp[$column];
   push(@L, $v) ; 
   $sum += $v; 
   $Counts{"$v"}++;
   $n++;
}

# Wyznaczenie ¶redniej:
$mean = $sum /$n; 

## Wyznaczenie dominanty:
## przy okazji wydrukowanie danych pogrupowanych
print "+--------+---------+--------+--------+--------+\n";
print "| G³osy  | Obwody  |  cumG³ | cumG³% |  cumN% |\n";
print "+--------+---------+--------+--------+--------+\n";
$maxc = -1;
for $c (sort {$a &lt;=> $b } keys %Counts ) { 
  $sumCum += $Counts{"$c"} * $c; 
  $nCum += $Counts{"$c"}; 
  if ($maxc_pos &lt; $Counts{$c} ) { 
    $maxc_pos = $Counts{$c} ; $maxc_val = $c
  }
  printf "| %6d |  %6d | %6d | %6.2f | %6.2f |\n", 
    $c,  $Counts{$c}, $sumCum, $sumCum/$sum *100, $nCum/$n *100;
}
print "+--------+---------+--------+--------+--------+\n\n";

$mode = $maxc_val; # dominanta

## Wyznaczenie mediany:
$half = int(($#L +1)/2 );
@L = sort ({ $a &lt;=> $b } @L) ; #numerycznie
##print "$half of @L\n";
$median = $L[$half];

printf "¦rednie: x&#0772; = %.3f (N=%d) Me =%.3f D = %.3f\n", $mean, $n, $median, $mode;

## Odchylenia od ¶redniej:
for my $l (@L) {##
  $sd1 = ($l - $mean) ; 
  $sd2 = $sd1 * $sd1; # ^2 
  $sd3 = $sd2 * $sd1; # ^3

  $sum_sd1 += $sd1; $sum_sd2 += $sd2;
  $sum_sd3 += $sd3;
}

# odchylenie std./3-ci moment:
$sd = sqrt(($sum_sd2 / $n)); 
$u3 = $sum_sd3/$n;

printf "Sumy (x-x&#0772;): %.2f(&#0185;) %.2f(&#0178;) %.2f(&#0179;)\n", 
   $sum_sd1, $sum_sd2, $sum_sd3;
printf "Rozproszenie: &#0963; = %.3f &#0181;&#0179; = %.3f\n", $sd, $u3;

printf "Sko¶no¶æ: (x&#0772;-D)/&#0963; = %.2f", ($mean -$mode)/$sd;
printf " 3(x&#0772;-Me)/&#0963;) = %.2f", 3 * ($mean - $median)/$sd;
printf " (&#0181;&#0179;/&#0963;&#0179;) = %.2f\n", $u3/($sd*$sd*$sd);
##//
</pre>

<p>Uruchomienie powy¿szego skryptu daje w wyniku to samo.
Moja pewno¶æ, ¿e wszystko jest OK jest teraz
(prawie ¿e) stuprocentowa.</p>

<p>Wracaj±c do R:</p>
<pre>
library(ggplot2);
p &lt;-  ggplot(data = s, aes(x = glosy)) + geom_histogram(binwidth = 4)
p
breaks &lt;- ggplot_build(p)$data
breaks

[[1]]
     y count   x xmin xmax      density      ncount    ndensity PANEL group
1  482   482   0   -2    2 0.1834094368 1.000000000 2628.000000     1    -1
2  140   140   4    2    6 0.0532724505 0.290456432  763.319502     1    -1
...
</pre>
<p>Pierwszy przedzia³ jest definiowany jako (-2;2], ale z uwagi na warto¶æ danych <em>de facto</em> liczy
g³osy w komisjach,
w których
Hojarska dosta³a 0--2 g³osów (drugi to (2;6], itd) i ni cholery nie da siê tego zmieniæ
na co¶ bardziej zbli¿onego do prawdy. Bo tak jak jest to faktycznie pierwszy przedzia³ jest dwa
razy wê¿szy ni¿ ka¿dy pozosta³y. W szczególno¶ci prawdziwa ¶rednia, w tym przedziale wynosi 1,259 g³osa,
za¶ liczona jako ¶rodek przedzia³u
przez liczebno¶æ wynosi 1.0 (482 *1/482). Wg formu³y ggplota ¶rodek przedzia³u to zero zatem ¶rednia te¿ wyjdzie 0,
tj. warto¶æ jest wyznaczona z du¿ym/nieokre¶lonym b³êdem.
</p>
<p>Dzieje siê tak poniewa¿: <em>the histogram is centered at 0, and the first bars
xlimits are at 0.5*binwidth and -0.5*binwidth</em>. Dopiero gdy dane s± dodatnie, to ggplot zaczyna od zera. No ale
nasz zbiór zawiera zera i klops. Zmiana tego jest nietrywialna.
</p>

<p>Zamiast ggplota mo¿a u¿yæ po prostu polecenia hist:</p>

<pre>
h &lt;- hist(s$glosy, breaks=seq(0,max(s$glosy), by=4) )
h

$breaks
 [1]   0   4   8  12  16  20  24  28  32  36  40  44  48  52  56  60  64  68  72
[20]  76  80  84  88  92  96 100 104 108 112 116 120 124 128 132 136 140 144 148
[39] 152

$counts
 [1] 592  42   6   4   2   2   2   1   2   1   2   0   0   0   0   0   0   0   0
[20]   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1

$density
 [1] 0.2252663623 0.0159817352 0.0022831050 0.0015220700 0.0007610350
 [6] 0.0007610350 0.0007610350 0.0003805175 0.0007610350 0.0003805175
[11] 0.0007610350 0.0000000000 0.0000000000 0.0000000000 0.0000000000
[16] 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000
[21] 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000
[26] 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000
[31] 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000
[36] 0.0000000000 0.0000000000 0.0003805175

$mids
 [1]   2   6  10  14  18  22  26  30  34  38  42  46  50  54  58  62  66  70  74
[20]  78  82  86  90  94  98 102 106 110 114 118 122 126 130 134 138 142 146 150
</pre>
<p>No teraz liczy (prawie) jak trzeba pierwszy przedzia³ [0;4], drugi (4;8] itd.
Prawie bo na upartego pierwszy przedzia³ jest szeroki na 5 warto¶ci a kolejne
na 4. Eh te detale i te upierdliwe zero:-)
</p>
<p>Przy okazji siê zaduma³em, a có¿ to jest to <em>density</em>. W pierwszym podej¶ciu, ¿e
to s± czêsto¶ci, ale nie, bo ewidentnie nie sumuj± siê do 1:
</p>
<pre>
  ?hist
  density: values f^(x[i]), as estimated density values. If
          `all(diff(breaks) == 1)', they are the relative frequencies
          `counts/n' and in general satisfy sum[i; f^(x[i])
          (b[i+1]-b[i])] = 1, where b[i] = `breaks[i]
</pre>
<p>No do¶æ kryptycznie, ale mo¿na siê domy¶leæ, ¿e nie $\sum_i d_i =1$, ale
$\sum_i d_i * w_i$, gdzie $w_i$, to szeroko¶æ przedzia³u
$i$ (a $d_i$ oznacza gêsto¶æ
w przedziale $i$ oczywi¶cie).
Pole pod krzyw± bêdzie zatem równe 1, jak tego nale¿y siê spodziewaæ po gêsto¶ci.
</p>

<p>Wprawdzie ju¿ to pad³o mimochodem wy¿ej, ale analizowany zbiór danych to
liczba oddanych g³osów na numer jeden na li¶cie komitetu wyborczego Zbigniewa Stonogi
w okrêgu wyborczym 25 w wyborach do Sejmu w 2015 roku.
Tym numerem jeden by³a Danuta Hojarska, która faktycznie dosta³a
152 g³osy w jednej komisji (we wsi, w której mieszka) oraz 0--4 g³osów w 90% pozosta³ych
komisjach (w tym 0 g³osów w 191/657.0 = 29% komisjach).
</p>
<!-- analiza przestrzenna -->

<h4>Analiza przestrzenna</h4>

<p>Ze starych zapasów odgrzeba³em plik CSV ze wspó³rzêdnymi
obwodowych komisji wyborczych i po³±czy³em go z wynikami uzyskanymi przez
Hojarsk± z zamiarem wy¶wietlenia
tego na mapie za pomoc± <em>Google Fusion Tables</em> (GFT):</p>
<pre>
obwod;coordexact;glosy;icon
101884;54.2701205 18.6317438;3;measle_white
101885;54.260714 18.6282809;0;measle_white
101886;54.262187 18.632082;2;measle_white
101887;54.257501 18.63147;1;measle_white
101888;54.25786 18.6306574;7;measle_grey
...
</pre>
<p>Kolumna <code>icon</code> zawiera nazwê ikony, która jest
definiowana wg schematu: 0--3 g³osy biala (measle_white); 4--9 g³osów
szara (measle_grey) 9-19 g³osów ¿ó³ta (small_yellow) 20--99 g³osów
czerwona (small_red) 100 i wiêcej g³osów purpurowa (small_purple).
Zestawienie dostêpnych w GFT ikon mo¿na znale¼æ
<a href='https://fusiontables.google.com/DataSource?dsrcid=308519#map:id=3'>tutaj</a>.
Konfigurowanie GFT aby korzysta³a z kolumny z nazwami ikon
sprowadza siê do wyklikania stosownej pozycji
(<em>Configure map &#x2192;Feature map &#x2192;Change feature styles
&#x2192;Use icon specified in a column</em>.)
</p>

<div>
 <a href='https://raw.githubusercontent.com/hrpunio/MBlog/master/pic/hojarska_na_mapie_gft.png'>
 <img width='60%' longdesc='' alt=''
   src='https://raw.githubusercontent.com/hrpunio/MBlog/master/pic/hojarska_na_mapie_gft.png'/>
 </a>
</div>

<p>Przy okazji odkurzy³em zasób skryptów/zasobów u¿ywanych
do geokodowania i/lub przygotowywania danych pod potrzeby GFT,
w szczególno¶ci:
<code>joincvs.pl</code> (³±czy dwa pliki csv w oparciu o warto¶ci
n-tej kolumny w pierwszym pliku oraz m-tej kolumny w drugim);
<code>geocodeCoder0.pl</code> (uruchamia geokodera Google).
Oba skrypty i jeszcze parê rzeczy mo¿na znale¼æ:
<a href='https://github.com/hrpunio/MBlog/tree/master/R/sejm2015'>tutaj</a>.
</p>

</body></html>
<!--
Local variables:
 mode: nxml
 coding: iso-8859-2
 LocalWords: Przechlewski
 ispell-local-dictionary: "polish"
End:
-->
