<?xml version='1.0' encoding='iso-8859-2' ?>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
<title>¯u³awy w Ko³o 2018</title>
<!-- Tags: rowery,inne,r,statistics-->
</head><body><!-- ##Published : 2018-09-18T01:45:27CEST ##-->

<div style='float : right'>
 <a href='https://raw.githubusercontent.com/hrpunio/MBlog/master/pic/ZwK_2018_vs_2017.jpg'>
 <img width='180px' longdesc='[[' alt=''
   src='https://raw.githubusercontent.com/hrpunio/MBlog/master/pic/ZwK_2018_vs_2017.jpg'/>
 </a>
</div>

<p>
Siê tak rozochoci³em, ¿e zapisa³em siê na ¯u³awy w Ko³o 2018 (99 PLN). W ramach
  przygotowañ, ¿e tak powiem taktycznych postanowi³em rozpoznaæ mo¿liwo¶ci przeciwnika:-)
  Konkretnie ustaliæ jak jechali ci co siê zapisali, a co ju¿ startowali w ¯wK w roku
  2017 albo 2016. Zadanie zatem polega na odszukaniu na li¶cie zg³oszeñ tych co siê zapisali na edycjê 2018
  i jednocze¶nie ukoñczyli ¯wK w latach 2016/2017. Oczywi¶cie nie rêcznie, tylko automatem:
</p>
<pre>
## poni¿sze ¶ci±ga plik z list± zapisanych
wget 'http://www.czasomierzyk.pl/zapisy2016/zulawywkolo/index.php?akcja=lista' -O ZwK2018.out
</pre>
<p>Plik HTML ma tak prost± strukturê, ¿e jego zamiana (za pomoc± wyra¿eñ regularnych)
na CSV jest banalna. Jak ju¿ mam ten plik CSV, to porównujê
go do po³±czonych wyników z lat 2017/2016 (te¿ w formacie CSV).
Skrypt mam co porównuje pliki CSV:
</p>
<pre>
perl join_csvs.pl -fn1 ZwK201809190908.csv  -fs1 1,2 -fn2 ZwK16_17.csv -fs2 1,2
</pre>
<p>Porównuje pliki <code>ZwK201809190908.csv</code> oraz
<code>ZwK16_17.csv</code>, w oparciu o (wspóln±) warto¶ci dla kolumn
nr 1 oraz nr 2 (w tym przypadku
s± to kolumny zawieraj±ce nazwisko
i imiê). Innymi s³owy <code>fs1 c1,c2...</code>,
to klucz g³ówny, a <code>fs2 c1,c2</code>, to klucz obcy.
Skrypt wypisuje po³±czone wiersze odpowiadaj±ce tym wierszom dla, których
klucz g³ówny = klucz obcy. Na dzi¶ (19 wrze¶nia) takich wierszy wypisa³ 55,
(na 104 zg³oszenia na dystansie 140km), ale pomijam tych co startowali kiedy¶ na
najkrótszym dystansie lub tych, którzy startowali wprawdzie na najkrótszym, ale mieli ¶redni±
mniejsz± ni¿ 24kmh (odpada w ten sposób 10 zostaje 45).
Na koniec plik jest zapodawany do prostego skryptu
rysuj±cego wykres s³upkowy:</p>
<pre>
z &lt;- read.csv("ZwK_2018_vs_2017.csv", sep = ';',
   header=T, na.string="NA", dec=".");

s140 &lt;- summary(z$speed)

z &lt;- subset (z, ( speed > 16.0 )); ## bez maruderów

# wykres s³upkowy
h &lt;- hist(z$speed,
  breaks=c(18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35),
  freq=TRUE,
  col="orange",
  main="Dystans: 140 (bior±cy udzia³ w latach 2017-16)",
  xlab="Prêdko¶æ ¶rednia w latach 2017--16 [kmh]",ylab="L.kolarzy",
  labels=T, xaxt='n' )
  axis(side=1, at=c(18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35))
  text(38, 37, summary_label, cex = .8, adj=c(1,1) )
</pre>
<p>Jak widaæ paru ludków w okolicach
30kmh jest. Bêdzie za kim jechaæ.</p>

</body></html>
<!--
Local variables:
 mode: nxml
 coding: iso-8859-2
 LocalWords: Przechlewski
 ispell-local-dictionary: "polish"
End:
-->
